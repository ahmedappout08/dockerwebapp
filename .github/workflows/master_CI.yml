name: Docker

on:


  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: master
  RELEASE_REVISION: latest
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: lg-gulf-ka-robodesk
  ECR_REPOSITORY: demo

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  Setup Docker buildx cache:
    - name: Set up Docker Buildx                             
      id: buildx                                             
      uses: docker/setup-buildx-action@master                
    - name: Docker cache layers                              
      uses: actions/cache@v2                                 
      with:                                                  
        path: /tmp/.buildx-cache                             
        key: ${{ runner.os }}-single-buildx-${{ github.sha }}
        restore-keys: |                                      
             ${{ runner.os }}-single-buildx    
    - name: Build & Push Image                                                                                      
      env:                                                                                                                                                                 
        RELEASE_IMAGE: docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME:${{ env.RELEASE_REVISION }}
      run: |
         docker buildx create --use

         docker buildx build \                                
         --cache-from=type=local,src=/tmp/.buildx-cache \   
         --cache-to=type=local,dest=/tmp/.buildx-cache-new \
         --tag ${{ env.RELEASE_IMAGE }} \                           
         --target release \                                 
         --push \                                           
          .                                                  

         rm -rf /tmp/.buildx-cache
         mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Deploy to Kubernetes cluster                                                                            
      uses: kodermax/kubectl-aws-eks@master                                                                         
      env:                                                                                                          
       RELEASE_IMAGE: docker.pkg.github.com/ahmedappout08/dockerwebapp/master:${{ env.RELEASE_REVISION }}
       with:                                                                                                         
         args: set image deployment/my-pod app=${{ env.RELEASE_IMAGE }} --record -n $KUBE_NAMESPACE   
    - name: Verify Kubernetes deployment                               
      uses: kodermax/kubectl-aws-eks@master                            
      with:                                                            
          args: rollout status deploy my-pod -n $KUBE_NAMESPACE 
